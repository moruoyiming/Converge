Thread 底层调用start的 native方法
并行 及 并发 概念？
并行，多个线程同时执行的概念。
并发，单位时间内，线程处理数据的能力，吞吐量。

Java默认是多线程
高并发编程的意义及好处？
平衡使用我们的线程(好处)
不要cpu 过累(意义)

非守护线程  主线程 和 子线程
 主线程结束，子线程不会直接结束 一直在等Thead t 到底执行完了没有
守护线程
 主线程结束，子线程跟着结束。因为子线程是守护线程。


面试题
1.run 和start方法的区别？
   .run()时函数调用和线程没有任何关系，.start()方法执行native底层函数，系统最终调度到run函数，这才是线程。
2. 如何控制线程的执行顺序？
   .join() 函数控制，让t2获取执行权力，能够做到顺序执行
3. 多线程中的并行和并发是什么？
   四个车道，四辆车并行的行驶，就是并行。
   四个车道，五秒钟多少的车流量，多少的吞吐量，是并发。单位时间内的执行效率
4. 在Java中能不能指定CPU去执行某个线程？
   不能，Java是做不到的，唯一能够去干预的是C语言调用内核的API去执行才行。
5. 项目开发过程中，你会考虑线程优先级么？
   不会考虑优先级，为什么呢？因为线程的优先级很依赖与系统的平台，所以这个优先级无法对号入座，无法做到你想象中的优先级，属于
   不稳定，有风险，因为某些开源框架，也不能依靠线程优先级来设置自己想要的优先级顺序，这个是不可靠的。
   例：Java线程优先级有十级，而此时操作系统优先级指有2~3级，那就对应不上了。
6. sleep 和 wait 有什么区别？
   sleep是休眠，等休眠时间一国，才有执行的资格，注意是有资格，并不能马上就会被执行，什么时候执行，取决于cpu系统调度。
   wait是登台，需要唤醒，唤醒后，才有执行的资格。
   sleep()：线程进入睡眠状态，不会释放锁
   ait()：调动方法之前，必须要持有锁。调用了wait()方法以后，锁就会被释放，进入锁的等待队列，方法返回后重新拿到锁

