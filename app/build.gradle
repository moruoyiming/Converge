apply plugin: 'com.android.application'
apply plugin: 'com.alibaba.arouter'
android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.example.hotfix"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        dataBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation "com.google.android.material:material:$rootProject.androidXVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.androidXVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraint_version"
    implementation 'q.rorbin:badgeview:1.1.3'
    api project(':basewebview')
    api project(':network')
    api project(':base')
    api project(':common')
    api project(':news')
    api project(':aop')
    //引入自定义注解处理程序
    annotationProcessor project(':compiler')
    androidTestImplementation 'junit:junit:4.12'
}

////Aspect如果在appModule中使用必须有如下声明。在构建工程时，执行编织
//import org.aspectj.tools.ajc.Main
//project.android.applicationVariants.all { variant ->
//    JavaCompile javaCompile = variant.javaCompile
//    //在编译后 增加行为
//    javaCompile.doLast {
//        println "执行AspectJ编译器......"
//        String[] args = [
//                "-1.7",
//                //aspectJ 处理的源文件
//                "-inpath", javaCompile.destinationDir.toString(),
//                //输出目录，aspectJ处理完成后的输出目录
//                "-d", javaCompile.destinationDir.toString(),
//                //aspectJ 编译器的classpath aspectjtools
//                "-aspectpath", javaCompile.classpath.asPath,
//                //java的类查找路径
//                "-classpath", javaCompile.classpath.asPath,
//                //覆盖引导类的位置  android中使用android.jar 而不是jdk
//                "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
//        new Main().runMain(args, false)
//    }
//}


//// gradle 插件开发代码
//apply plugin: 'com.cocos.plugin'
//
//releaseHelper{
//    //FirUpload
//    appName = "COCOS"
//    pgyApiKey = "sss"
//    changeLog = "Update gradle. "
//    iconFilePath = rootProject.projectDir.getAbsolutePath()+"/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png"
//
//    //For SendMsgToDingTalk
//    apiToken = ""
//    msgTitle = "新版 "+project.android.defaultConfig.versionName + "_" +project.android.defaultConfig.versionCode
//    msgContent = "Android打包完成，欢迎下载使用"
//    singleButtonTitle = "了解详情"
//    singleButtonUrl = "https://www.pgyer.com/gradle"
//
//}
